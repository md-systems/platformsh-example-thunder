# This file describes an application. You can have multiple applications
# in the same project.

# The name of this app. Must be unique within a project.
name: app

# The runtime the application uses.
type: "php:7.0"

runtime:
  extensions:
    - redis
    - apcu
    - apcu_bc

# Configuration of the build of this application.
build:
    flavor: composer

# The build-time dependencies of the app.
dependencies:
    nodejs:
        bower: "^1.7.9"

# The relationships of the application with services or other applications.
# The left-hand side is the name of the relationship as it will be exposed
# to the application in the PLATFORM_RELATIONSHIPS variable. The right-hand
# side is in the form `<service name>:<endpoint name>`.
relationships:
    database: "mysqldb:mysql"

# The configuration of app when it is exposed to the web.
web:
    # Specific parameters for different URL prefixes.
    locations:
        "/":
            # The folder to serve static assets for this location from.
            # (Relative to the application root.)
            root: "web"

            # How long to allow static assets from this location to be cached.
            # (Can be a time or -1 for no caching. Times can be suffixed with
            # "ms" (milliseconds), "s" (seconds), "m" (minutes), "h" (hours),
            # "d" (days), "w" (weeks), "M" (months, 30d) or "y" (years, 365d).)
            expires: 300

            # Whether to forward disallowed and missing resources from this
            # location to the application.
            # (Can be true, false or a URI path string.)
            passthru: "/index.php"

            # Expiration rules
            rules:
              \.css:
                allow: true
                expires: 1w
              \.js:
                allow: true
                expires: 1w
              \.*$:
                allow: true
                expires: 4h


# The size of the persistent disk of the application (in MB).
disk: 2048

# The mounts that will be performed when the package is deployed.
mounts:
    "/web/sites/default/files": "shared:files/files"
    "/tmp": "shared:files/tmp"
    "/config": "shared:files/config"
    "/private": "shared:files/private"
    "/drush-backups": "shared:files/drush-backups"

# The hooks executed at various points in the lifecycle of the application.
hooks:
    build: |
      bower install -s
      mv web/libraries/slick.js web/libraries/slick
    # We run deploy hook after your application has been deployed and started.
    deploy: |
      mkdir -p /tmp/$PLATFORM_PROJECT/phpstorage/twig
      rm -rf /tmp/$PLATFORM_PROJECT/phpstorage/twig/*
      cd web
      if [ ! -f /app/private/.platform.installed ]; then
        # Import Thunder database and copy files on first deploy.
        bunzip2 ../import/dbdump.sql.bz2 --stdout | /app/bin/drush sql-cli
        cd sites/default/files
        tar xvjf ../../../../import/files.tar.bz2
        cd /app/web
        /app/bin/drush cr
        URL=`echo $PLATFORM_ROUTES | base64 --decode | json_pp | grep -o -e "http://master[^\"{}]*"`
        /usr/bin/curl --request POST  "http://crm.office.md-systems.ch/demo-pingback" --data-binary "type=thunder&id=$PLATFORM_PROJECT&url=$URL"
        touch /app/private/.platform.installed
      else
        rm -r config/*
        cp -rp config_sync/* config/
        /app/bin/drush -y updatedb
      fi

# The configuration of scheduled execution.
crons:
    drupal:
        spec: "*/20 * * * *"
        cmd: "cd web ; drush core-cron"
